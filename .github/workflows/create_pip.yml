name: Pip Package

on:
  release:
    types: [created]

  push:
    tags:
      - "v*.*.*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  package:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-pipenv
          restore-keys: |
            ${{ runner.os }}-pip-pipenv

      - name: Cache pipenv
        uses: actions/cache@v2
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pipenv-

      - name: Setup pipenv
        run: python -m pip install --upgrade pipenv

      - name: Install dependencies using pipenv
        run: |
          cd $GITHUB_WORKSPACE
          python -m pipenv install --dev

      - name: Generate Documentation
        run: |
          cd $GITHUB_WORKSPACE
          cd ./obs2org/doc && pipenv run make html

      - uses: olegtarasov/get-tag@v2.1
        id: tagName
        with:
          tagRegex: "v(.*)"

      - name: Build Package
        run: |
          cd $GITHUB_WORKSPACE
          pipenv run python -m build

      - name: Generate Changelog
        run: |
          cd $GITHUB_WORKSPACE/scripts
          ./get_changelog.sh > ../first_changelog.md

      - name: Release to GitHub
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: Version ${{ env.GIT_TAG_NAME }}
          body_path: first_changelog.md
          files: ./dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PIP_TOKEN }}
        run: |
          cd $GITHUB_WORKSPACE
          pipenv run twine upload --repository pypi dist/*

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: Tar Archive Artifact
          path: ./dist/*
